$breakpoints: (
  'base': 0,
  'sm': 640px,
  'md': 768px,
  'lg': 1024px,
  'xl': 1280px,
  '2xl': 1536px
);

$spacing: (
  'none': 0,
  'tight': 8px,
  'standard': 16px,
  'relaxed': 24px,
  'wide': 32px
);

:root {
  --grid-background: #ffffff;
  --grid-surface: #f8fafc;
  --grid-border: rgba(0, 0, 0, 0.1);
  --grid-shadow: rgba(0, 0, 0, 0.05);
  --grid-debug-line: rgba(0, 122, 255, 0.3);
  --grid-debug-container: rgba(0, 122, 255, 0.05);
  --grid-debug-item: rgba(255, 59, 48, 0.05);
  --grid-text-primary: #1a202c;
  --grid-text-secondary: #718096;
  --grid-accent: #3182ce;

  --grid-transition: 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  --grid-transition-slow: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@media (prefers-color-scheme: dark) {
  :root {
    --grid-background: #1a202c;
    --grid-surface: #2d3748;
    --grid-border: rgba(255, 255, 255, 0.1);
    --grid-shadow: rgba(0, 0, 0, 0.3);
    --grid-debug-line: rgba(66, 153, 225, 0.4);
    --grid-debug-container: rgba(66, 153, 225, 0.1);
    --grid-debug-item: rgba(245, 101, 101, 0.1);
    --grid-text-primary: #f7fafc;
    --grid-text-secondary: #a0aec0;
    --grid-accent: #63b3ed;
  }
}

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  }
}

@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: append($transitions, $property var(--grid-transition), comma);
  }
  transition: $transitions;
}

[data-grid-root] {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
  color: var(--grid-text-primary);
  background-color: var(--grid-background);
  @include transition(background-color, color);

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  &[data-debug] {
    --grid-debug-enabled: 1;
  }
}

[data-grid-container] {
  display: grid;
  position: relative;
  @include transition(all);

  &.grid-debug {
    background-color: var(--grid-debug-container);
    outline: 2px dashed var(--grid-debug-line);
    outline-offset: -1px;
  }
}

[data-grid-item] {
  position: relative;
  @include transition(transform, box-shadow, opacity);

  &[data-interactive] {
    cursor: pointer;

    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px var(--grid-shadow);
    }

    &:active {
      transform: translateY(0);
      transition-duration: 0.1s;
    }
  }

  &.grid-debug {
    background-color: var(--grid-debug-item);
    outline: 1px dotted var(--grid-debug-line);
    outline-offset: -1px;
  }
}

[data-grid-area] {
  position: relative;
  @include transition(all);
}

[data-grid-stack] {
  position: relative;

  .grid-stack-item {
    @include transition(opacity, transform);
  }
}

[data-grid-auto] {
  display: grid;
  @include transition(all);
}

[data-grid-masonry] {
  display: grid;
  @include transition(all);
}

[data-grid-debug-overlay] {
  pointer-events: none;
  z-index: 9999;

  .grid-debug-line {
    @include transition(opacity);

    &-column {
      border-left: 1px solid var(--grid-debug-line);
    }

    &-row {
      border-top: 1px solid var(--grid-debug-line);
    }
  }
}

.grid-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.grid-stretch {
  width: 100%;
  height: 100%;
}

.grid-card {
  background: var(--grid-surface);
  border: 1px solid var(--grid-border);
  border-radius: 8px;
  padding: 1rem;
  box-shadow: 0 1px 3px var(--grid-shadow);
  @include transition(box-shadow, transform);

  &:hover {
    box-shadow: 0 4px 12px var(--grid-shadow);
    transform: translateY(-1px);
  }
}

.grid-interactive {
  cursor: pointer;
  @include transition(transform, box-shadow);

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px var(--grid-shadow);
  }

  &:active {
    transform: translateY(0);
  }
}

.grid-fade-in {
  animation: gridFadeIn 0.3s var(--grid-transition);
}

.grid-slide-up {
  animation: gridSlideUp 0.3s var(--grid-transition);
}

.grid-scale-in {
  animation: gridScaleIn 0.3s var(--grid-transition);
}

@keyframes gridFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes gridSlideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes gridScaleIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}
